services:

  localstack:
    image: localstack/localstack:3.0.2
    ports:
      - '4566:4566' # LocalStack Gateway
      - '4510-4559:4510-4559' # external services port range
    env_file:
      - 'compose/aws.env'
    environment:
      DEBUG: ${DEBUG:-1}
      LS_LOG: WARN # Localstack DEBUG Level
      SERVICES: s3,sqs,sns,firehose
      LOCALSTACK_HOST: 127.0.0.1
    volumes:
      - '${TMPDIR:-/tmp}/localstack:/var/lib/localstack'
      - ./compose/start-localstack.sh:/etc/localstack/init/ready.d/start-localstack.sh
    healthcheck:
      test: ['CMD', 'curl', 'localhost:4566']
      interval: 5s
      start_period: 5s
      retries: 3
    networks:
      - cdp-tenant

  redis:
    image: redis:7.2.3-alpine3.18
    ports:
      - '6379:6379'
    restart: always
    networks:
      - cdp-tenant

  mongodb:
    image: mongo:6.0.13
    networks:
      - cdp-tenant
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data
    restart: always

################################################################################

  tdm-prototype-frontend:
    build: ./
    ports:
      - '3000:3000'
    links:
      - 'localstack:localstack'
      - 'redis:redis'
    depends_on:
      localstack:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - 'compose/aws.env'
    environment:
      PORT: 3000
      NODE_ENV: development
      REDIS_HOST: redis
      LOCALSTACK_ENDPOINT: http://localstack:4566
      USE_SINGLE_INSTANCE_CACHE: true

    networks:
      cdp-tenant:
        aliases:
          - tdm-prototype-frontend.localtest.me
      # - oauth2-proxy

  cdp-defra-id-stub:
    build: https://github.com/DEFRA/cdp-defra-id-stub.git
    ports:
      - '3200:3200'
    links:
      - 'redis:redis'
    depends_on:
      localstack:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ['CMD', 'curl', 'localhost:3200']
      interval: 5s
      start_period: 5s
      retries: 3

    environment:
      PORT: 3200
      NODE_ENV: development
      REDIS_HOST: redis
      USE_SINGLE_INSTANCE_CACHE: true
      APP_BASE_URL: http://cdp-defra-id-stub.localtest.me:3200
    networks:
      - cdp-tenant

  cdp-defra-id-demo:
    build:
      context: https://github.com/DEFRA/cdp-defra-id-demo.git
      target: development
    ports:
      - '3100:3100'

    environment:
      PORT: 3100
      REDIS_HOST: redis
      DEFRA_ID_CLIENT_SECRET: test_value
      DEFRA_ID_OIDC_CONFIGURATION_URL: http://cdp-defra-id-stub:3200/cdp-defra-id-stub/.well-known/openid-configuration
    links:
      - 'redis:redis'
    depends_on:
      cdp-defra-id-stub:
        condition: service_healthy
      # localstack:
      #   condition: service_healthy
      redis:
        condition: service_started
    networks:
      - cdp-tenant

  tdm-prototype-backend:
    build: ../tdm-prototype-backend
    ports:
      - '3080:8080'
    links:
      - 'localstack:localstack'
      - 'mongodb:mongodb'
    depends_on:
      localstack:
        condition: service_healthy
      mongodb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      LOCALSTACK_ENDPOINT: http://localstack:4566
      Mongo__DatabaseUri: mongodb://mongodb:27017
      # AZURE_CLIENT_ID: "c1d14b98-8baf-486b-99c0-f30ac3ee5464"
      AZURE_TENANT_ID: "c9d74090-b4e6-4b04-981d-e6757a160812"
    env_file:
      - '../tdm-prototype-backend/TdmPrototypeBackend.Api/Properties/local.env'
    networks:
      cdp-tenant:
        aliases:
          - tdm-prototype-backend.localtest.me

################################################################################

volumes:
  mongodb-data:

networks:
  cdp-tenant:
    # driver: bridge
